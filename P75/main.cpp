/*
 * 75. 颜色分类
 * 给定一个包含红色、白色和蓝色、共 n 个元素的数组 nums ，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。
 * 我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。
 * 必须在不使用库内置的 sort 函数的情况下解决这个问题。
 *
 * 示例 1：
 * 输入：nums = [2,0,2,1,1,0]
 * 输出：[0,0,1,1,2,2]
 *
 * 示例 2：
 * 输入：nums = [2,0,1]
 * 输出：[0,1,2]
 */

#include <iostream>
#include <vector>
using namespace std;

class Solution {
public:
    void sortColors(vector<int>& nums) {
        int ptr = 0;
        for(int i = 0; i < nums.size(); i++){
            if(nums[i] == 0) {
                swap(nums[i], nums[ptr]);
                ptr++;
            }
        }
        for(int i = ptr; i < nums.size(); i++){
            if(nums[i] == 1){
                swap(nums[i],nums[ptr]);
                ptr++;
            }
        }
    }
};

int main() {
    vector<int> nums1 = {2,0,2,1,1,0};
    vector<int> nums2 = {2,0,1};
    Solution solution;
    solution.sortColors(nums1);
    solution.sortColors(nums2);
    for(int i:nums1)
        cout << i << " ";
    cout << endl;
    for(int i:nums2)
        cout << i << " ";
    return 0;
}
